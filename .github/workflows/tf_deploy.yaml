name: Terraform AWS Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs:

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       
  deploy:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: sonarcloud

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      run: terraform plan

    - name: Terraform apply
      run: terraform apply -auto-approve

    - name: Retrieve DocumentDB credentials from Secrets Manager
      id: get-secrets
      run: |
        secrets=$(aws secretsmanager get-secret-value --secret-id documentdbcredentials --query SecretString --output text)
        echo "DOCDB_CREDENTIALS<<EOF" >> $GITHUB_ENV
        echo $secrets >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Install MongoDB Shell
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
        echo "deb http://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
        sudo apt-get update
        sudo apt-get install -y mongodb-org-shell

    - name: Create databases in DocumentDB
      run: |
        endpoint=$(echo $DOCDB_CREDENTIALS | jq -r .endpoint)
        username=$(echo $DOCDB_CREDENTIALS | jq -r .username)
        password=$(echo $DOCDB_CREDENTIALS | jq -r .password)
        port=$(echo $DOCDB_CREDENTIALS | jq -r .port)
        mongo --host $endpoint:$port --username $username --password $password --eval 'db.getSiblingDB("dbclientes").createCollection("clientes"); db.getSiblingDB("dbpedidos").createCollection("pedidos");'
